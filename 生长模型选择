%% 1. 输入实验数据（时间 & 每组细菌数量）
% 时间（单位：小时）
t = [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 21.5 22]';

% 每列是一组数据（组1到组6）
N_all = [
0.025133333	0.006433333	0.013233333	0.013833333	0.010933333	0.008533333;
0.03615	    0.01985	    0.01305	    0.01075	    0.00935	    0.01155;
0.040866667	0.026266667	0.046566667	0.012366667	0.021366667	0.023966667;
0.056666667	0.024466667	0.029666667	0.028966667	0.030566667	0.022666667;
0.0845	    0.040866667	0.024666667	0.042966667	0.048766667	0.049166667;
0.18193333	0.09733333	0.11963333	0.09883333	0.07693333	    0.09713333;
0.3276	    0.2108	    0.1901	    0.1653	    0.1803	    0.1336;
0.507166667	0.298266667	0.216266667	0.2637667	0.2103667	0.2757667;
0.6316667	0.4850667	0.4440667	0.4780667	0.4623667	0.4437667;
0.7096	    0.6659	    0.6013	    0.6059	    0.6206	    0.6363;
0.8961	    0.7913	    0.7774	    0.7825	    0.7718	    0.7876;
0.955933333	0.915433333	0.965733333	0.856833333	0.843033333	0.864333333;
0.98044	    0.99304	    0.89644	    0.89894	    1.01994	    0.90014;
1.07444	    1.03624	    1.04784	    1.01374	    1.04894	    1.03504;
1.13264	    1.18034	    1.09434	    1.11474	    1.10264	    1.15634;
1.14284	    1.13004	    1.14334	    1.13144	    1.15994	    1.05964;
1.27534	    1.26204	    1.26184	    1.25194	    1.17324	    1.18984;
1.29444	    1.23994	    1.20744	    1.29394	    1.24194	    1.22094;
1.30794	    1.29494	    1.31114	    1.35304	    1.23724	    1.27744;
1.31024	    1.29224	    1.27414	    1.34234	    1.23184	    1.25494;
1.39084	    1.34044	    1.40014	    1.35464	    1.28874	    1.30904;
1.36134	    1.34664	    1.38104	    1.34274	    1.30614	    1.33894;
1.32134	    1.35214	    1.36994	    1.44424	    1.32174	    1.39414;
1.35054	    1.36574	    1.37054	    1.40444	    1.31564	    1.39364
];

%% 2. 模型函数定义
logistic = @(b, t) b(3) ./ (1 + ((b(3) - b(1)) ./ b(1)) .* exp(-b(2) .* t)); % b = [N0, r, K]
gompertz = @(b, t) b(3) * exp(-exp(b(2) * exp(1) * (b(1) - t) / b(3)));     % b = [t0, r, K]
richards = @(b, t) b(3) ./ (1 + b(4) .* exp(-b(2) .* t)).^(1 / b(1));       % b = [v, r, K, a]

t_fit = linspace(min(t), max(t), 200);
colors = lines(3);

%% 3. 拟合每组数据
for i = 1:size(N_all, 2)
    fprintf('\n============== 组 %d 拟合结果 ==============\n', i);
    N = N_all(:, i);
    
    % Logistic
    b0_log = [N(1), 0.5, max(N)+0.1];
    [bL, ~] = lsqcurvefit(logistic, b0_log, t, N, [], []);
    NL_fit = logistic(bL, t_fit);
    R2_log = 1 - sum((N - logistic(bL, t)).^2) / sum((N - mean(N)).^2);
    
    % Gompertz
    b0_gom = [5, 0.5, max(N)+0.1];
    [bG, ~] = lsqcurvefit(gompertz, b0_gom, t, N, [], []);
    NG_fit = gompertz(bG, t_fit);
    R2_gom = 1 - sum((N - gompertz(bG, t)).^2) / sum((N - mean(N)).^2);
    
    % Richards
    b0_ric = [2, 0.5, max(N)+0.1, 10];
    [bR, ~] = lsqcurvefit(richards, b0_ric, t, N, [], []);
    NR_fit = richards(bR, t_fit);
    R2_ric = 1 - sum((N - richards(bR, t)).^2) / sum((N - mean(N)).^2);

    % 输出参数
    fprintf('Logistic:  N0=%.4f, r=%.4f, K=%.4f, R²=%.4f\n', bL(1), bL(2), bL(3), R2_log);
    fprintf('Gompertz:  t0=%.4f, r=%.4f, K=%.4f, R²=%.4f\n', bG(1), bG(2), bG(3), R2_gom);
    fprintf('Richards:  v=%.4f, r=%.4f, K=%.4f, a=%.4f, R²=%.4f\n', bR(1), bR(2), bR(3), bR(4), R2_ric);

    %% 绘图
    figure('Name', sprintf('Group %d - Model Comparison', i));
    plot(t, N, 'ko', 'DisplayName', 'Raw Data'); hold on;
    plot(t_fit, NL_fit, '-', 'Color', colors(1,:), 'LineWidth', 2, 'DisplayName', 'Logistic');
    plot(t_fit, NG_fit, '--', 'Color', colors(2,:), 'LineWidth', 2, 'DisplayName', 'Gompertz');
    plot(t_fit, NR_fit, ':', 'Color', colors(3,:), 'LineWidth', 2, 'DisplayName', 'Richards');
    xlabel('Time（h）');
    ylabel('OD');
    title(sprintf('Group %d Growth Curve Fitting', i));
    legend('Location', 'southeast');
    grid on;
end
